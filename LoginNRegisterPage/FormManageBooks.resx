<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="ImageList1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>20, 17</value>
  </metadata>
  <data name="ImageList1.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAAAM
        DgAAAk1TRnQBSQFMAgEBBAEAAXgBAAF4AQABFAEAARQBAAT/AQkBAAj/AUIBTQE2AQQGAAE2AQQCAAEo
        AwABUAMAASgDAAEBAQABCAUAAYABDBgAAYACAAGAAwACgAEAAYADAAGAAQABgAEAAoACAAPAAQABwAHc
        AcABAAHwAcoBpgEAATMFAAEzAQABMwEAATMBAAIzAgADFgEAAxwBAAMiAQADKQEAA1UBAANNAQADQgEA
        AzkBAAGAAXwB/wEAAlAB/wEAAZMBAAHWAQAB/wHsAcwBAAHGAdYB7wEAAdYC5wEAAZABqQGtAgAB/wEz
        AwABZgMAAZkDAAHMAgABMwMAAjMCAAEzAWYCAAEzAZkCAAEzAcwCAAEzAf8CAAFmAwABZgEzAgACZgIA
        AWYBmQIAAWYBzAIAAWYB/wIAAZkDAAGZATMCAAGZAWYCAAKZAgABmQHMAgABmQH/AgABzAMAAcwBMwIA
        AcwBZgIAAcwBmQIAAswCAAHMAf8CAAH/AWYCAAH/AZkCAAH/AcwBAAEzAf8CAAH/AQABMwEAATMBAAFm
        AQABMwEAAZkBAAEzAQABzAEAATMBAAH/AQAB/wEzAgADMwEAAjMBZgEAAjMBmQEAAjMBzAEAAjMB/wEA
        ATMBZgIAATMBZgEzAQABMwJmAQABMwFmAZkBAAEzAWYBzAEAATMBZgH/AQABMwGZAgABMwGZATMBAAEz
        AZkBZgEAATMCmQEAATMBmQHMAQABMwGZAf8BAAEzAcwCAAEzAcwBMwEAATMBzAFmAQABMwHMAZkBAAEz
        AswBAAEzAcwB/wEAATMB/wEzAQABMwH/AWYBAAEzAf8BmQEAATMB/wHMAQABMwL/AQABZgMAAWYBAAEz
        AQABZgEAAWYBAAFmAQABmQEAAWYBAAHMAQABZgEAAf8BAAFmATMCAAFmAjMBAAFmATMBZgEAAWYBMwGZ
        AQABZgEzAcwBAAFmATMB/wEAAmYCAAJmATMBAANmAQACZgGZAQACZgHMAQABZgGZAgABZgGZATMBAAFm
        AZkBZgEAAWYCmQEAAWYBmQHMAQABZgGZAf8BAAFmAcwCAAFmAcwBMwEAAWYBzAGZAQABZgLMAQABZgHM
        Af8BAAFmAf8CAAFmAf8BMwEAAWYB/wGZAQABZgH/AcwBAAHMAQAB/wEAAf8BAAHMAQACmQIAAZkBMwGZ
        AQABmQEAAZkBAAGZAQABzAEAAZkDAAGZAjMBAAGZAQABZgEAAZkBMwHMAQABmQEAAf8BAAGZAWYCAAGZ
        AWYBMwEAAZkBMwFmAQABmQFmAZkBAAGZAWYBzAEAAZkBMwH/AQACmQEzAQACmQFmAQADmQEAApkBzAEA
        ApkB/wEAAZkBzAIAAZkBzAEzAQABZgHMAWYBAAGZAcwBmQEAAZkCzAEAAZkBzAH/AQABmQH/AgABmQH/
        ATMBAAGZAcwBZgEAAZkB/wGZAQABmQH/AcwBAAGZAv8BAAHMAwABmQEAATMBAAHMAQABZgEAAcwBAAGZ
        AQABzAEAAcwBAAGZATMCAAHMAjMBAAHMATMBZgEAAcwBMwGZAQABzAEzAcwBAAHMATMB/wEAAcwBZgIA
        AcwBZgEzAQABmQJmAQABzAFmAZkBAAHMAWYBzAEAAZkBZgH/AQABzAGZAgABzAGZATMBAAHMAZkBZgEA
        AcwCmQEAAcwBmQHMAQABzAGZAf8BAALMAgACzAEzAQACzAFmAQACzAGZAQADzAEAAswB/wEAAcwB/wIA
        AcwB/wEzAQABmQH/AWYBAAHMAf8BmQEAAcwB/wHMAQABzAL/AQABzAEAATMBAAH/AQABZgEAAf8BAAGZ
        AQABzAEzAgAB/wIzAQAB/wEzAWYBAAH/ATMBmQEAAf8BMwHMAQAB/wEzAf8BAAH/AWYCAAH/AWYBMwEA
        AcwCZgEAAf8BZgGZAQAB/wFmAcwBAAHMAWYB/wEAAf8BmQIAAf8BmQEzAQAB/wGZAWYBAAH/ApkBAAH/
        AZkBzAEAAf8BmQH/AQAB/wHMAgAB/wHMATMBAAH/AcwBZgEAAf8BzAGZAQAB/wLMAQAB/wHMAf8BAAL/
        ATMBAAHMAf8BZgEAAv8BmQEAAv8BzAEAAmYB/wEAAWYB/wFmAQABZgL/AQAB/wJmAQAB/wFmAf8BAAL/
        AWYBAAEhAQABpQEAA18BAAN3AQADhgEAA5YBAAPLAQADsgEAA9cBAAPdAQAD4wEAA+oBAAPxAQAD+AEA
        AfAB+wH/AQABpAKgAQADgAMAAf8CAAH/AwAC/wEAAf8DAAH/AQAB/wEAAv8CAAP//wD/AP8A/wD/AP8A
        SAABvAEUC0MBFQHsAf8HAAHzDPAB/wcAAfABQwVmARABQwHwDgAB/wHxAf8IAAH/AeoB7AvqARMBFQHw
        BgAB7wGLCwYBbAHzCAAB7wHPA68BjQFnAe8PAAHyAUQB7AgAAfQBbQHsB+oB6wHtAuoB7QFDAbwFAAH/
        AYsBawrrAUMB7wH/CAAB9AFmA64BjQFmAfQGAAHxCJIB6wEVAUMHkgHxAfQBDwHrDOwBbQHyBQAB9AFr
        AWYKkgHqAfIB/wIAAfQB6wVzBhEEcwJtAfQB6gHzB/QB7wH3CPIB6gH0AUQNSwEVAfMGAAHrAYsLBgFs
        AfMCAAHxAa4HrwKuBq8BjQFnAfEBbQHxAeoB7wH0A/MB9AHvAfcB8wfyAW0B9AFEDXMBSwG8BgAB/wEU
        ASILRAFtAgAB8QGMAo0BrwSNAq4GjQGuARQB8QFtAbwBawHtAZID6wEHAbwBBwHvBusB8AFtAfQBRA1z
        AUsBvAYAAfEBJAxEAewCAAHxAeoC7AHwAewBQwRsAYsBbAERA+wB6wFsAfEBbQH/AbwB8wX/AfABvAf0
        AeIBbQH0AUQNcwFLAbwGAAHvAUwB7AnwAe0B8QMAAfEBBwH/AuwBBwGRBOsBEQHbAZABBwLsAdwBugHx
        AW0BvAFsAewB7QPrAQcD7wZtAfABbQH0AUQNcwFLAbwGAAHxASQMRAHsAgAB8QEHAf8B7QEHAfQBkQTr
        AREB2wGQAfQBBwHtAdwBugHxAW0B8wHsAbwB/wP0Af8C7wfzAeIBbQH0AUQKcwF0AUQCFAHxBgAB8QEP
        ASILRAFtAgAB8QEHAf8B8AHyAccBkAHrAdUCFQLbAZABxwHyAfAB3AG6AfEBbQHxAZAB7wHzA/EB8wLv
        AfIG8AHyAW0B9AFECXMBSgFsAZYCugFsAZIB/wMAAfABSwEDCyoB9wMAAfEBBwH/AeICGQGRAYsBswIV
        AbMBsgGRAhkB4gHcAboB8QFtAfABbAHtAfcD7AEHAu8BBwbsAfABbQH0AUQIcwFLAWwBugGQAWwBSQG6
        AXEBBwMAAewBSwHsCfcBEgHyAfQDAAHxAQcB/wG7AeoBFAGLARQBEQGNAW4BEAEVAWYBFQHqAbsB3AG6
        AfEBbQH0AQcB8wX/Au8H9AHiAW0B9AFECHMBFAG6AZ0BbAEHAWYBnQG6AWwB/wIAAewBAwESCW0BQwHv
        AfIDAAHxAQcB/wEUAY0BrgIVAW4C7QFuAUMBZgFnAa4BFAHcAboB8QFtAQcBbAHsAe0DbQEHA+8GbQHw
        AW0B9AFECHMBFQG6ARUBkgEbARwB6wGLAWwB9AIAAfMBRAEDAyoBFQEqASIFKgGSAwAB8QEHAf8BFAGM
        Ae0BvAHtAewBvQG3AW4B7QEZAZEBZwESAdwBugHxAW0B8wHtAfAF/wLvB/QB4gFtAf8B6whzARUBugFm
        ARIB8AHqAWwBkAFJAf8DAAH/AQcBDQGLAQYBawELAQ8FBgFsAfQCAAHxAQcB/wIUAbwB7QH3ARUCkwFD
        AfcB7AEJARUBtQHcAboB8QFtAfIB7Qb/Au8G9AHsAfABbQH0AUQIcwFEAZ0BugFyARwBbAK6Aa4FAAHs
        Aa0BFAESARABTQFEAxIBEwERAe8B/wIAAfEB7wHyAhQBvALsAe0BkAFtAfcB7AGuAQkCFQEZAboB8QFt
        AfABvAbwAu0DvAHwAfICvAEHAeoB9AFECXMBQwKWAWwBkAG6AWwB8gUAAYYBawHwAesBQwFEAREDEgEV
        AfAEAAH/Au8BFQEUAbwB7AFtAa4BugHvAewBbQHrAQkCFQLvAf8B9A0HAfAB8wMHAvQBRAlzAe0BFQFs
        AZABiwFwAfIGAAHrAQYBEwdtAeoBEwG8Af8FAAHqARQBvAHvAesBbQG6Ae8C6wG6AQkBFQHqBQAB/wHv
        C5IB7wH0AwAB/wEVC3MBdAFLAW0B9AcAAfMBZgoGAWsB9AUAAeoBFAK8AfABuwFsARIB9wHwAbsBCQEV
        AeoFAAHzAXMBeQGgAXoHeQFzAWwBDwH0AwABvAETCxUBFAHsAf8IAAH/AfEJ8AHyBgAB7AETAeoB7AHv
        AfIC/wHyAe8B7AESARQB6wUAAf8B8AEHAvIIBwHwAf8DAAFCAU0BPgcAAT4DAAEoAwABUAMAASgDAAEB
        AQABAQUAAeABARYAA//xAAGAAQABfwEAAQMB+AEBAf8B+AH/BAABfgEAAQMB/AEDAf8B+AH/BAABfAEA
        AQMB/AEDAfAGAAF8AQABAwkAAX4BAAEDCQABfgEAAQMJAAF+AQABAwkAAX4BAAEHCQABfgEAAQMJAAF+
        AQABAwkAARwBAAEHCQABHAEAAQcJAAEMAQABBwkAAQwBAAEHCQABDgEAAQMJAAEfAQABAwkAAR8BAAEP
        CQABPwEAAQMB4AEAAXwBAAEHBAABfwEAAQMB4AEAAXwBAAEDAgABgAEAAX8BgAEHAeABAAF8AQABBwIA
        Cw==
</value>
  </data>
  <metadata name="$this.TrayHeight" type="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>25</value>
  </metadata>
</root>